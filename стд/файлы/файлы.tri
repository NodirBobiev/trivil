модуль файлы

импорт "стд::строки"

тип Байты* = []Байт

тип Запрос = класс {
    код-ошибки: мб Строка := пусто
}

тип Файл* = класс {
    заданный-путь: Строка := позже
    ошибка: мб Ошибка := пусто
}

// Выдает файл с заданным путем. НЕ делает никаких файловых операций
фн новый файл*(путь: Строка): Файл {
    вернуть Файл{заданный-путь: путь}
}

фн (ф: Файл) ошибка?*(): мб Ошибка {
    вернуть ф.ошибка
}

фн (ф: Файл) путь*(): Строка {
    вернуть ф.заданный-путь
}

// ==== чтение/запись ====

// Читает целиком файл, расположенный по заданному пути
фн (ф: Файл) прочитать*(): Байты {

    пусть запрос = Запрос{}
    
    пусть байты = sysapi_fread(запрос, ф.заданный-путь)
    
    если запрос.код-ошибки # пусто {
        ф.ошибка := Ошибка{
            код: запрос.код-ошибки^, 
            текст: строки.ф("прочитать '$;': $;", ф.заданный-путь, запрос.код-ошибки^)
        } 
        вернуть Байты[]
    }
    
    вернуть байты^
}

фн (ф: Файл) записать*(байты: Байты) {

    пусть запрос = Запрос{}
    
    sysapi_fwrite(запрос, ф.заданный-путь, байты)
    
    если запрос.код-ошибки # пусто {
        ф.ошибка := Ошибка{
            код: запрос.код-ошибки^, 
            текст: строки.ф("записать '$;': $;", ф.заданный-путь, запрос.код-ошибки^)
        } 
        вернуть
    }
}

// ==== атрибуты файла ====

фн (ф: Файл) это папка?*(): Лог {

    пусть запрос = Запрос{}
    пусть ответ = sysapi_is_dir(запрос, ф.заданный-путь)

    если запрос.код-ошибки # пусто {
        ф.ошибка := Ошибка{
            код: запрос.код-ошибки^,
            текст: строки.ф("это папка? '$;': $;", ф.заданный-путь, запрос.код-ошибки^)
        } 
        вернуть ложь
    }

    вернуть ответ
}

фн (ф: Файл) создать папку*(): Лог {
    пусть запрос = Запрос{}

    пусть ответ = sysapi_make_dir(запрос, ф.заданный-путь)

    если запрос.код-ошибки # пусто {
        ф.ошибка := Ошибка{
            код: запрос.код-ошибки^,
            текст: строки.ф("создать папку '$;': $;", ф.заданный-путь, запрос.код-ошибки^)
        }
        вернуть ложь
    }

    вернуть ответ
}

// ==== чтение папки ====

// Выдает список имен из папки, расположенной по заданному пути.
// Список не включает "." и ".."
фн (ф: Файл) имена в папке*(): Строки {
    
    пусть запрос = Запрос{}

    пусть список = sysapi_dirnames(запрос, ф.заданный-путь)

    если запрос.код-ошибки # пусто {
        ф.ошибка := Ошибка{
            код: запрос.код-ошибки^, 
            текст: строки.ф("записать '$;': $;", ф.заданный-путь, запрос.код-ошибки^)
        } 
        вернуть Строки[]
    }

    вернуть список
}

// ==== абсолютный путь ====

// Возвращает аболютный путь файла (от корня файловой системы) 
фн (ф: Файл) абсолютный путь*(): Строка {

    пусть запрос = Запрос{}
    пусть ответ = sysapi_abs_path(запрос, ф.заданный-путь)

    если запрос.код-ошибки # пусто {
        ф.ошибка := Ошибка{
            код: запрос.код-ошибки^, 
            текст: строки.ф("абсолютный путь '$;': $;", ф.заданный-путь, запрос.код-ошибки^)
        } 
        вернуть ""
    }    

    вернуть ответ
}

// ==== права ====
фн (ф: Файл) установить права*(права: Цел64): Лог {
    пусть запрос = Запрос{}

    пусть ответ = sysapi_set_permissions(запрос, ф.заданный-путь, права)

    если запрос.код-ошибки # пусто {
        ф.ошибка := Ошибка{
            код: запрос.код-ошибки^,
            текст: строки.ф("установить права '$;': $;", ф.заданный-путь, запрос.код-ошибки^)
        }
        вернуть ложь
    }

    вернуть ответ
}