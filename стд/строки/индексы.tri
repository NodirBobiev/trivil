// Поиск подстроки
модуль строки

// Возвращает номер начала подстроки (>= №-старт) или -1, если нет подстроки
фн индекс*(с: Строка, №-старт: Цел64, подстрока: Строка): Цел64 {

    надо №-старт >= 0 иначе авария("№-старт < 0")

    пусть с8 = с(:Строка8)
    пусть п8 = подстрока(:Строка8)
    пусть дл = длина(п8)
    
    //==== граничные случаи
    выбор {
    когда дл = 0: вернуть №-старт
    когда №-старт + дл > длина(с8): вернуть -1
    когда дл = 1: вернуть индекс байта(с8, №-старт, п8[0])
    когда №-старт = 0 & дл = длина(с8):
        если с = подстрока { вернуть 0 }
        вернуть -1
    }
    // ==== общий случай
    // TODO: оптимизировать
    
    пусть стопор = длина(с8) - дл
    пусть б0 = п8[0]

    пока №-старт <= стопор {
        если с8[№-старт] = б0 {
            пусть № := 1
            пока № < дл & с8[№-старт + №] = п8[№] {
                №++
            }
            если № = дл { вернуть №-старт }
        }
        №-старт++
    }
 
    вернуть -1
}

фн индекс байта(с8: Строка8, №-старт: Цел64, байт: Байт): Цел64 {

    надо №-старт >= 0 иначе авария("№-старт < 0")

    пока №-старт < длина(с8) {
        если с8[№-старт] = байт { вернуть №-старт }
        №-старт++
    }
    вернуть -1
}