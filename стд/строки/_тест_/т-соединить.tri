модуль строки

импорт "стд::тестирование/тест-основа"

//==== соединить ====

тип ТСтроки = []Строка

тип Тсоединить = класс {
    раз = ""
    арг: ТСтроки = позже
    отв: Строка = позже
}
тип ТТсоединить = []Тсоединить 

пусть тесты-соединить = ТТсоединить[
    Тсоединить{раз: "", арг: ТСтроки[""], отв: ""},
    Тсоединить{раз: "ф", арг: ТСтроки[""], отв: ""},
    Тсоединить{раз: "ф", арг: ТСтроки["ы"], отв: "ы"},
    Тсоединить{раз: "ф", арг: ТСтроки["ы", ""], отв: "ыф"},
    Тсоединить{раз: "+", арг: ТСтроки["ы", "ы"], отв: "ы+ы"},
    Тсоединить{раз: "++", арг: ТСтроки["ыы", "цц"], отв: "ыы++цц"},
]

фн т-соединить(т: тест-основа.Основа) {

    пусть № := 0
    пока № < длина(тесты-соединить) {

        пусть в = тесты-соединить [№]
        пусть ответ = соединить(в.раз, в.арг...)
        
        если ответ = в.отв  { 
            т.успех(ф("соединить $;", №))
        } иначе {
            т.ошибка(ф("соединить $;", №), "'$;' # '$;'", ответ, в.отв)
        }
   
        №++
    }
}