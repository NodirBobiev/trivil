модуль тестер

импорт "стд::тестирование/тест-основа"
импорт "стд::строки"
импорт "стд::вывод"


тип Тест = класс {
    имя: Строка = позже
    результат: Цел64 := 0
    ошибка: Строка := ""
}

тип Тесты = []Тест

тип Тестер* = класс (тест-основа.Основа) {
    число-ошибок := 0
    тесты = Тесты[]
}

// Код результата
конст * (
    Код-не-задан = 0
    Успех
    Ошибка
    Авария  // пока не используется
)

фн (т: Тестер) число тестов*(): Цел64 {
    вернуть длина(т.тесты)
}

фн (т: Тестер) число успешных тестов*(): Цел64 {
    вернуть длина(т.тесты) - т.число-ошибок
}

фн (т: Тестер) число ошибочных тестов*(): Цел64 {
    вернуть т.число-ошибок
}

// Сохраняет тест и результат
фн (т: Тестер) тест*(имя-теста: Строка, успех: Лог) {
    пусть рез := Успех
    если  успех { 
        т.успех(имя-теста)
        вернуть
    }

    т.ошибка(имя-теста, "")
}

// Сохраняет результат успешного теста
фн (т: Тестер) успех*(имя-теста: Строка) {
    т.тесты.добавить(Тест{имя: имя-теста, результат: Успех})
}

// Сохраняет результат ошибочного теста: Ошибка и дополнительную строку информации
фн (т: Тестер) ошибка*(имя-теста: Строка, формат: Строка, аргументы: ...*) {

    пусть сообщение = строки.ф(формат, аргументы...)

    т.тесты.добавить(
        Тест{
            имя: имя-теста, 
            результат: Ошибка,
            ошибка: сообщение
        }
     )
    т.число-ошибок++ 
    
    вывод.ф("Ошибка '$;': $;\n",  имя-теста, сообщение)
}

фн (т: Тестер) ф*(формат: Строка, аргументы: ...*) {
    вывод.ф(формат, аргументы...)
}

// обход 

