
Diploma text
Title: Implementing a code generator for the Trivil programming language for the JVM platform

Very very very Brief:

Introduction
A bit of background information about Trivil and JVM...
Motivation behind developing this project ...
Goals and objectives ...


Literature Review
For now, I have nothing to write here, and no idea what can write here in my specific case. Because I am writing
this project purely from my brain without seeking help or ideas from other literatures,


Methodology
Describe the syntax, semantics and features of the Trivil language ...
Outline the processes of the code generations, such as tools which are used (Jasmin in my case), testing the generated bytecode and optimization strategies


Implementation
The overview of the process by which Trivil statements are translated into equivalent JVM bytecode (lexer, parser, semantic, AST)
Mappings (or Projections): explain how each Trivil statement is mapped to one or more JVM bytecode instructions
Maybe provide examples illustrating the projections?!
Integration with Jasmin, like how the projected JVM bytecode is assembled using Jasmin


Discussion
Here we will discuss the limitations of our code generator, the Trivil features which are skipped or aren't mapped
Maybe some analyses of the performance and efficiency of the generated code?!


Conclusion
Summary of Key Findings: Brief summary of the most significant findings
