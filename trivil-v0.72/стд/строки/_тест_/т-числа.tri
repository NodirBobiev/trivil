модуль строки

импорт "стд::тестирование/тест-основа"

//==== строка в цел ====

тип Тстрока в цел = класс {
    стр: Строка = позже
    цел := 0
    рез := истина
}
тип ТТстрока в цел = []Тстрока в цел 

пусть тесты-строка в цел = ТТстрока в цел[
    Тстрока в цел{стр: "", рез: ложь},
    Тстрока в цел{стр: "-", рез: ложь},
    Тстрока в цел{стр: "+", рез: ложь},
    Тстрока в цел{стр: "9223372036854775808", рез: ложь,}, // макс Цел64 +1

    Тстрока в цел{стр: "0", цел: 0,},
    Тстрока в цел{стр: "-0", цел: 0,},
    Тстрока в цел{стр: "+0", цел: 0,},
    Тстрока в цел{стр: "1", цел: 1,},
    Тстрока в цел{стр: "+1", цел: 1,},
    Тстрока в цел{стр: "153", цел: 153,},
    Тстрока в цел{стр: "-153", цел: -153,},
    Тстрока в цел{стр: "9223372036854775807", цел: 9223372036854775807,}, // макс Цел64
    Тстрока в цел{стр: "-9223372036854775807", цел: -9223372036854775807,}, 
]

фн т-строка в цел(т: тест-основа.Основа) {

    цикл [№]тест среди тесты-строка в цел {

        пусть цел := 0
        пусть рез = строка в цел(тест.стр, цел)
        
        если тест.рез {
            если рез & цел = тест.цел  { 
                т.успех(ф("строка в цел $;", №))
            } иначе {
                т.ошибка(ф("строка в цел $;", №), "для \"$;\" ожидалось '$;:$;' получено '$;:$;'", тест.стр, тест.рез, тест.цел, рез, цел)
            }
        } иначе {
            если ~ рез { 
                т.успех(ф("строка в цел $;", №))
            } иначе {
                т.ошибка(ф("строка в цел $;", №), "для \"$;\" ожидалась неудача", тест.стр)
            }
        }
    }
}