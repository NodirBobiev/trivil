{
  "name": "Trivil",
  "scopeName": "source.tri",
  "fileTypes": ["tri"],
  "patterns": [
    {
      "name": "comment.line.double-slash.trivil",
      "begin": "//",
      "end": "$",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.comment.trivil" }
      },
      "patterns": [
        { "match": ".+", "name": "comment.line.trivil" }
      ]
    }, 
    {
      "name": "comment.block.trivil",
      "begin": "/\\*",
      "end": "\\*/",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.comment.begin.trivil" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.comment.end.trivil" }
      }
    },
    {
      "name": "keyword.control.trivil",
      "match": "(?<![-№\\w])(авария|вернуть|вход|выбор|другое|если|иначе|импорт|класс|когда|конст|мб|модуль|надо|осторожно|пока|позже|прервать|пусть|среди|тип|типа|фн|цикл)(?![-\\w?!№])"
    },
    {
      "name": "entity.name.type.trivil",
      "match": "(?<![-№\\w])(Байт|Цел64|Слово64|Вещ64|Лог|Символ|Строка|Строка8)(?![-\\w?!№])"
    },
    {
      "name": "constant.language.boolean.trivil",
      "match": "(?<![-№\\w])(ложь|истина)(?![-\\w?!№])"
    },
    {
      "name": "constant.language.null.trivil",
      "match": "(?<![-№\\w])пусто(?![-\\w?!№])"
    },
    {
      "name": "string.quoted.double.trivil",
      "begin": "\"",
      "end": "\"|\\n",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.trivil"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.trivil",
          "patterns":[
            {
              "match": "\\n",
              "name": "invalid.illegal.newline.trivil"
            }
          ]
        }
      },
      "patterns": [
        {
          "name": "constant.character.escape.trivil",
          "match": "\\\\(u[0-9A-Fa-f]{4}|[nrt\"'])"
        },
        {
          "match": "[^\"\\\\\\n\\r\\t]+",
          "name": "string.content.trivil"
        }
      ]
    },
    {
      "name": "constant.character.trivil",
      "begin": "'",
      "end": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.character.begin.trivil"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.character.end.trivil"
        }
      },
      "patterns": [
        {
          "name": "constant.character.escape.trivil",
          "match": "\\\\(u[0-9A-Fa-f]{4}|[nrt'\"\\\\])"
        },
        {
          "match": "[^'\\\\\\n\\r\\t]",
          "name": "string.content.trivil"
        }
      ]
    }
  ],
  "repository": {
  }
}
